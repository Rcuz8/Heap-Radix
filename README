
-----------------
 BACKGROUND INFO
-----------------

Author: RYAN COCUZZO

------
 TASK
------

The task was to implement two sorting algorithms: Radix Sort and Heapsort. Heapsort is included
as a part of the general construction of a simple custom max-heap and will run at approximately
O(nlogn). It also sorts with a constant space complexity, which makes it an optimal solution in
the sorting world, outside of the additional resources needed to construct the heap. The second
algorithm implemented, Radix Sort, is a brilliant sorting option as it operates with linear
time complexity, however it requires a higher amount of space at O(n+k) space complexity.
Collectively, these are two interesting sorting algorithms that both work very well for our
sorting parameters.

-------
 FILES
-------

	HeapTest.java - Tests the Heap, RadixSort, and Sortmain's sorting functionalities. Contains
	    the main method.

	Heap.java - Implements the heap that we will use for sorting.

	RadixSort.java - Implements my personal Radix Sort.

	Sortmain.java - The class implementation of Radix Sort.

	BinElement.java - The implementation of a Binary Representation of an element in an array.

    	P.java - Convenience class for printing to the console.

---------------
 COMPILE & RUN
---------------

	Open terminal on folder. Run the following commands.

	~$ javac HeapTest.java

	~$ java HeapTest


